

<div class="alert alert-info">
  <p>Pan the first image, pinch the second one. <code>PanGestureRecognizer</code> & <code>PinchGestureRecognizer</code></p>
</div>


<div class="row-fluid">

    {{view App.PanPhotoCanvasView class="span6"}}

    <div class="clearfix"></div>

    {{#view App.PinchPhotoView class="span6"}}
      <img src="/assets/images/ember-productivity-sm.png"/>
    {{/view}}

</div>


<div class="space is-code"></div>

<div class="row-fluid">

  <div class="span12">
    <span class="label label-info">Code</span>
    <pre>
App.PinchPhotoView = Em.View.extend({

  <b>pinchOptions</b>: {
    numberOfRequiredTouches: 2
  },

  <b>pinchStart</b>: function(rec, evt) {
    var width,
        image,
        scale;

    image = this.$('img');
    scale = rec.get('scale');
    width = image.width();
    image.animate({
      width: width*scale
    }, 500, "linear");
  },

  touchMove: function(event) {
    event.preventDefault();
  }


});

App.PanPhotoCanvasView = App.PhotoCanvas.extend({

  <b>panOptions</b>: {
    numberOfRequiredTouches: 1
  },

  <b>panChange</b>: function(rec, evt) {

    var SMOOTH_FACTOR = 5,
        x, y,
        val = rec.get('translation'),
        canvasContext = this.get('canvasContext'),
        image = this.image;

    x = Math.min(this.x + SMOOTH_FACTOR * val.x,
      image.width - canvasContext.canvas.width * this.scale);

    y = Math.min(this.y + SMOOTH_FACTOR * val.y,
      image.height - canvasContext.canvas.height * this.scale);

    x = Math.max(x, 0);
    y = Math.max(y, 0);

    this.x = x;
    this.y = y;

    this.refreshImage();
  },

  touchMove: function(event) {
    event.preventDefault();
  }

});

    </pre>
  </div>
</div>

