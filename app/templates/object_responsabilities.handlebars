
<div class="row-fluid">

  <h2>ApplicationGestureManager</h2>
  <div class="span11">
    <p>An <code>ApplicationGestureManager</code> instance is injected at the Application namespace to inform <code>GestureManager</code> instances if touch events can be dispatched.</p>
    <p>At runtime, the <code>isAllBlocked</code> property can be updated to block/unblock all the gesture recognizers at the Application level.</p>
  </div>

</div>

<div class="row-fluid">

  <h2>GestureManager</h2>
  <div class="span11">
    <p>It manages touchstart, touchmove, touchend and touchcancel events which are dispatched by the <code>EventDispatcher</code>.</p>
    <p>Including <strong>ember-touch</strong> in your project, automatically extends the view <code>init</code> method to assign a <code>GestureManager</code> instance to each view.</p>
    <p>The <code>GestureManager</code> responsabilities are:</p>
    <ol>
      <li>Receives touch events.</li>
      <li>Dispatching the event to its view if it implements the given touch event handler.</li>
      <li>Dispatch the event to the multiple view gesture instances, whenever all different coordination rules are satified.</li>
      <li>Handling event bubbling.</li>
    </ol>
  </div>

</div>

<div class="row-fluid">

  <h2>GestureDelegate</h2>
  <div class="span11">
    <p>A gesture can be setup to use a <code>GestureDelegate</code> instance.</p> <p>The main responsability of a delegate is to either <strong>permit</strong> or <strong>deny</strong> a touch event to be dispatched to the gesture instance based on Application logic.</p>
    <p>Whenever a touch event could be dispatched to a specific gesture, the <code>GestureManager</code> will ask the delegate instance if the touch event can be dispatched.</p>
    <p>A <code>GestureDelegate</code> can be setup implementing its <code>shouldReceiveTouch</code> method and adding <code>DelegateRule</code> instances.
  </div>

</div>

<div class="row-fluid">

  <h2>GestureDelegateRule</h2>
  <div class="span11">
    <p>A <code>GestureDelegate</code> can be setup with 0 or N <code>DelegateRule</code> instances.</p>
    <p><code>DelegateRule</code> must implement its <code>shouldReceiveTouch</code> method to respond with <strong>true</strong>, <strong>false</strong> or <strong>undefined</strong> value.</p>
    <p>A condition to dispatch a touch event to a gesture, is provided by the <code>DelegateRule</code> list (if present). The <code>GestureDelegate</code> iterates the rule list performing the <code>shouldReceive</code> method and either satisfy or denies the condition whenever a rule responds a non-undefined value.</p>
  </div>

</div>

<div class="space is-code"></div>

<div class="row-fluid">

  <div class="span10">
    <span class="label label-info">Diagram</span>
    <img src="assets/images/ember-touch-classes.png" class="img-polaroid">
  </div>


</div>

<div class="space"></div>
